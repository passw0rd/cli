language: go

go: tip

before_install: go get -t ./...

script:
  go test ./...

before_deploy:
- PLATFORMS=(darwin/amd64 freebsd/amd64 linux/amd64 windows/amd64)

# build binary for all archs
- |
  for PLATFORM in "${PLATFORMS[@]}"; do
    echo "Building $PLATFORM"
    GOOS=${PLATFORM%/*}
    GOARCH=${PLATFORM#*/}

    if [ "$GOOS" = "windows" ]; then
      build_cmd="GOOS=$GOOS GOARCH=$GOARCH go build -o passw0rd.exe -ldflags '-w -s -X main.Version=${TRAVIS_TAG} -X main.BuildTime=`date -u '+%Y-%m-%d_%I:%M:%S%p'` -X main.CommitId=${TRAVIS_COMMIT}'"
    else
      build_cmd="CGO_ENABLED=0 GOOS=$GOOS GOARCH=$GOARCH go build -o passw0rd -ldflags '-w -s -extldflags '-static' -X main.Version=${TRAVIS_TAG} -X main.BuildTime=`date -u '+%Y-%m-%d_%I:%M:%S%p'` -X main.CommitId=${TRAVIS_COMMIT}'"
    fi
    if ! eval $build_cmd; then
      echo "Failed building passw0rd for $PLATFORM" && return 1
    fi

    if [ "$GOOS" = "windows" ]; then
      zip passw0rd-${GOOS}-${GOARCH}.zip passw0rd
    else
      tar cvzf passw0rd-${GOOS}-${GOARCH}.tgz passw0rd
    fi
  done

- ls

deploy:
  provider: releases
  api_key: $AUTH_TOKEN
  file:
  - "passw0rd-darwin-amd64.tgz"

  - "passw0rd-freebsd-amd64.tgz"

  - "passw0rd-linux-amd64.tgz"

  - "passw0rd-windows-amd64.zip"

  skip_cleanup: true
  on:
    tags: true